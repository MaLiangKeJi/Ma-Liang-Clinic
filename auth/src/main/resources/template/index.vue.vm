<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
        #foreach($column in $columns)
            #if($column.query)
                #set($dictType=$column.dictType)
                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #set($parentheseIndex=$column.columnComment.indexOf("（"))
                #if($parentheseIndex != -1)
                    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                #else
                    #set($comment=$column.columnComment)
                #end
                #if($column.htmlType == "input")
                  <el-form-item label="${comment}" prop="${column.javaField}">
                    <el-input
                        v-model="queryParams.${column.javaField}"
                        placeholder="请输入${comment}"
                        clearable
                        @keyup.enter.native="handleQuery"
                    />
                  </el-form-item>
                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
                  <el-form-item label="${comment}" prop="${column.javaField}">
                    <el-select v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable>
                      <el-option
                          v-for="dict in dict.type.${dictType}"
                          :key="dict.value"
                          :label="dict.label"
                          :value="dict.value"
                      />
                    </el-select>
                  </el-form-item>
                #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
                  <el-form-item label="${comment}" prop="${column.javaField}">
                    <el-select v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable>
                      <el-option label="请选择字典生成" value="" />
                    </el-select>
                  </el-form-item>
                #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
                  <el-form-item label="${comment}" prop="${column.javaField}">
                    <el-date-picker clearable
                                    v-model="queryParams.${column.javaField}"
                                    type="date"
                                    value-format="yyyy-MM-dd"
                                    placeholder="请选择${comment}">
                    </el-date-picker>
                  </el-form-item>
                #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
                  <el-form-item label="${comment}">
                    <el-date-picker
                        v-model="daterange${AttrName}"
                        style="width: 240px"
                        value-format="yyyy-MM-dd"
                        type="daterange"
                        range-separator="-"
                        start-placeholder="开始日期"
                        end-placeholder="结束日期"
                    ></el-date-picker>
                  </el-form-item>
                #end
            #end
        #end
      <el-form-item>
        <el-button type="primary" :icon="Search" size="large" @click="handleQuery">搜索</el-button>
        <el-button :icon="Refresh" size="large" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
            type="primary"
            plain
            :icon="Plus"
            size="large"
            @click="handleAdd"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
            type="success"
            plain
            :icon="Edit"
            size="large"
            :disabled="single"
            @click="handleUpdate"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
            type="danger"
            plain
            :icon="Delete"
            size="large"
            :disabled="multiple"
            @click="handleDelete"
        >删除</el-button>
      </el-col>
    </el-row>

    <el-table v-loading="loading" :data="${businessName}List" @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="55" align="center" />
        #foreach($column in $columns)
            #set($javaField=$column.javaField)
            #set($parentheseIndex=$column.columnComment.indexOf("（"))
            #if($parentheseIndex != -1)
                #set($comment=$column.columnComment.substring(0, $parentheseIndex))
            #else
                #set($comment=$column.columnComment)
            #end
            #if($column.pk)
              <el-table-column label="${comment}" align="center" prop="${javaField}" />
            #elseif($column.list && $column.htmlType == "datetime")
              <el-table-column label="${comment}" align="center" prop="${javaField}" width="180">
                <template #default="scope">
                  <span>{{ format(scope.row.${javaField}) }}</span>
                </template>
              </el-table-column>
            #elseif($column.list && $column.htmlType == "imageUpload")
              <el-table-column label="${comment}" align="center" prop="${javaField}" width="100">
                <template #default="scope">
                  <image-preview :src="scope.row.${javaField}" :width="50" :height="50"/>
                </template>
              </el-table-column>
            #elseif($column.list && "" != $column.dictType)
              <el-table-column label="${comment}" align="center" prop="${javaField}">
                <template #default="scope">
                    #if($column.htmlType == "checkbox")
                      <dict-tag :options="dict.type.${column.dictType}" :value="scope.row.${javaField} ? scope.row.${javaField}.split(',') : []"/>
                    #else
                      <dict-tag :options="dict.type.${column.dictType}" :value="scope.row.${javaField}"/>
                    #end
                </template>
              </el-table-column>
            #elseif($column.list && "" != $javaField)
              <el-table-column label="${comment}" align="center" prop="${javaField}" />
            #end
        #end
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template #default="scope">
          <el-button
              size="large"
              :icon="Edit"
              @click="handleUpdate(scope.row)"
              link
          >修改</el-button>
          <el-button
              size="large"
              :icon="Delete"
              @click="handleDelete(scope.row)"
              link
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>


    <el-pagination v-show="total > 0" v-model:current-page="queryParams.current" v-model:page-size="queryParams.size" :total="total" @current-change="getList" background layout="prev, pager, next" style="margin-top: 5%;" />

      <!-- 添加或修改${functionName}对话框 -->
    <el-dialog :title="title" v-model="open" append-to-body>
      <el-form ref="formRef" :model="form" :rules="rules" label-width="80px">
          #foreach($column in $columns)
              #set($field=$column.javaField)
              #if($column.insert && !$column.pk)
                  #if(($column.usableColumn) || (!$column.superColumn))
                      #set($parentheseIndex=$column.columnComment.indexOf("（"))
                      #if($parentheseIndex != -1)
                          #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                      #else
                          #set($comment=$column.columnComment)
                      #end
                      #set($dictType=$column.dictType)
                      #if($column.htmlType == "input")
                        <el-form-item label="${comment}" prop="${field}">
                          <el-input v-model="form.${field}" placeholder="请输入${comment}" />
                        </el-form-item>
                      #elseif($column.htmlType == "imageUpload")
                        <el-form-item label="${comment}" prop="${field}">
                          <image-upload v-model="form.${field}"/>
                        </el-form-item>
                      #elseif($column.htmlType == "fileUpload")
                        <el-form-item label="${comment}" prop="${field}">
                          <file-upload v-model="form.${field}"/>
                        </el-form-item>
                      #elseif($column.htmlType == "editor")
                        <el-form-item label="${comment}">
                          <editor v-model="form.${field}" :min-height="192"/>
                        </el-form-item>
                      #elseif($column.htmlType == "select" && "" != $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-select v-model="form.${field}" placeholder="请选择${comment}">
                            <el-option
                                v-for="dict in dict.type.${dictType}"
                                :key="dict.value"
                                :label="dict.label"
                                #if($column.javaType == "Integer" || $column.javaType == "Long")
                                :value="parseInt(dict.value)"
                                #else
                                :value="dict.value"
                                #end
                            ></el-option>
                          </el-select>
                        </el-form-item>
                      #elseif($column.htmlType == "select" && $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-select v-model="form.${field}" placeholder="请选择${comment}">
                            <el-option label="请选择字典生成" value="" />
                          </el-select>
                        </el-form-item>
                      #elseif($column.htmlType == "checkbox" && "" != $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-checkbox-group v-model="form.${field}">
                            <el-checkbox
                                v-for="dict in dict.type.${dictType}"
                                :key="dict.value"
                                :label="dict.value">
                              {{dict.label}}
                            </el-checkbox>
                          </el-checkbox-group>
                        </el-form-item>
                      #elseif($column.htmlType == "checkbox" && $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-checkbox-group v-model="form.${field}">
                            <el-checkbox>请选择字典生成</el-checkbox>
                          </el-checkbox-group>
                        </el-form-item>
                      #elseif($column.htmlType == "radio" && "" != $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-radio-group v-model="form.${field}">
                            <el-radio
                                v-for="dict in dict.type.${dictType}"
                                :key="dict.value"
                                #if($column.javaType == "Integer" || $column.javaType == "Long")
                                :label="parseInt(dict.value)"
                                #else
                                :label="dict.value"
                                #end
                            >{{dict.label}}</el-radio>
                          </el-radio-group>
                        </el-form-item>
                      #elseif($column.htmlType == "radio" && $dictType)
                        <el-form-item label="${comment}" prop="${field}">
                          <el-radio-group v-model="form.${field}">
                            <el-radio label="1">请选择字典生成</el-radio>
                          </el-radio-group>
                        </el-form-item>
                      #elseif($column.htmlType == "datetime")
                        <el-form-item label="${comment}" prop="${field}">
                          <el-date-picker clearable
                                          v-model="form.${field}"
                                          type="date"
                                          value-format="yyyy-MM-dd"
                                          placeholder="请选择${comment}">
                          </el-date-picker>
                        </el-form-item>
                      #elseif($column.htmlType == "textarea")
                        <el-form-item label="${comment}" prop="${field}">
                          <el-input v-model="form.${field}" type="textarea" placeholder="请输入内容" />
                        </el-form-item>
                      #end
                  #end
              #end
          #end
      </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button type="primary" @click="submitForm" style="height: 50px; width: 200px;">确 定</el-button>
            <el-button @click="cancel" style="height: 50px; width: 200px;">取 消</el-button>
        </div>
    </el-dialog>
  </div>
</template>

<script setup>
import { list${BusinessName}, get${BusinessName}, del${BusinessName}, add${BusinessName}, update${BusinessName} } from "@/api/${businessName}.js";
// import {parseTime} from "@/utils/vctgo";
import { ref, reactive, onMounted } from 'vue'
import { ElMessage, ElMessageBox } from 'element-plus'
import {  Edit, Delete, Search, Refresh, Plus, } from '@element-plus/icons-vue'

// 遮罩层
const loading = ref(true)
// 选中数组
const ids = ref([])
// 非单个禁用
const single = ref(true)
// 非多个禁用
const multiple = ref(true)
// 显示搜索条件
const showSearch = ref(true)
// 总条数
const total = ref(0)
// ${functionName}表格数据
const ${businessName}List = ref([])
// 弹出层标题
const title = ref("")
// 是否显示弹出层
const open = ref(false)
  #foreach ($column in $columns)
      #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
          #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
          // $comment时间范围
          const daterange${AttrName} = ref([])
      #end
  #end
      // 查询参数
const queryParams = reactive({
  current: 1,
  size: 10,
  #foreach ($column in $columns)
      #if($column.query)
          $column.javaField: null#if($foreach.count != $columns.size()),#end
      #end
  #end
})
// 表单参数
const form = reactive({})
const formRef = ref()
// 表单校验
const rules = {
  #foreach ($column in $columns)
      #if($column.required)
          #set($parentheseIndex=$column.columnComment.indexOf("（"))
          #if($parentheseIndex != -1)
              #set($comment=$column.columnComment.substring(0, $parentheseIndex))
          #else
              #set($comment=$column.columnComment)
          #end
          $column.javaField: [
          { required: true, message: "$comment不能为空", trigger: #if($column.htmlType == "select" || $column.htmlType == "radio")"change"#else"blur"#end }
      ]#if($foreach.count != $columns.size()),#end
      #end
  #end
}

onMounted(() => {
  getList()
})
  /** 查询${functionName}列表 */
function getList() {
      loading.value = true;
      #foreach ($column in $columns)
          #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
              queryParams.params = {};
              #break
          #end
      #end
      #foreach ($column in $columns)
          #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
              #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
              if (null != daterange${AttrName} && '' != daterange${AttrName}) {
                  queryParams.params["begin${AttrName}"] = daterange${AttrName}[0];
                  queryParams.params["end${AttrName}"] = daterange${AttrName}[1];
              }
          #end
      #end
      list${BusinessName}(queryParams).then(({ data }) => {
          let response = data.data
          ${businessName}List.value = response.records;
          total.value = response.total;
          loading.value = false;
      });
  }
  // 取消按钮
function cancel() {
  open.value = false;
  reset();
}
  // 表单重置
function reset() {
    Object.assign(form, {
        #foreach ($column in $columns)
            #if($column.htmlType == "radio")
                $column.javaField: #if($column.javaType == "Integer" || $column.javaType == "Long")0#else"0"#end#if($foreach.count != $columns.size()),#end
            #elseif($column.htmlType == "checkbox")
                    $column.javaField: []#if($foreach.count != $columns.size()),#end
            #else
                    $column.javaField: null#if($foreach.count != $columns.size()),#end
            #end
        #end
    })
    if(formRef.value) formRef.value.resetFields()
}
/** 搜索按钮操作 */
function handleQuery() {
  queryParams.current = 1;
  getList();
}
/** 重置按钮操作 */
const queryForm = ref()
function resetQuery() {
      #foreach ($column in $columns)
          #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
              #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
              daterange${AttrName} = [];
          #end
      #end
    if (queryForm) queryForm.value.resetFields()
      handleQuery();
  }
// 多选框选中数据
function handleSelectionChange(selection) {
      ids.value = selection.map(item => item.${pkColumn.javaField})
      single.value = selection.length!==1
      multiple.value = !selection.length
  }
/** 新增按钮操作 */
function handleAdd() {
      reset();
      open.value = true;
      title.value = "添加${functionName}";
  }
/** 修改按钮操作 */
function handleUpdate(row) {
      reset();
      const ${pkColumn.javaField} = row.${pkColumn.javaField} || ids.value
      get${BusinessName}(${pkColumn.javaField}).then(({ data }) => {
          let response = data.data
          Object.assign(form, response)
          #foreach ($column in $columns)
              #if($column.htmlType == "checkbox")
                  form.$column.javaField = this.form.${column.javaField}.split(",");
              #end
          #end
          open.value = true;
          title.value = "修改${functionName}";
      });
  }
/** 提交按钮 */
function submitForm() {
    formRef.value.validate(valid => {
      if (valid) {
          #foreach ($column in $columns)
          #if($column.htmlType == "checkbox")
          form.$column.javaField = form.${column.javaField}.join(",");
          #end
          #end
          if (form.${pkColumn.javaField} != null) {
              update${BusinessName}(form).then(response => {
                  ElMessage({
                      message: '修改成功',
                      type: 'success',
                  })
                  open.value = false;
                  getList();
              });
          } else {
              add${BusinessName}(form).then(response => {
                  ElMessage({
                      message: '新增成功',
                      type: 'success',
                  })
                  open.value = false;
                  getList();
              });
          }
      }
  });
}
/** 删除按钮操作 */
function handleDelete(row) {
    const ${pkColumn.javaField}s = row.${pkColumn.javaField} || ids.value;
    ElMessageBox.confirm(
            '是否确认删除当前${functionName}数据项？',
            'Warning',
            {
                confirmButtonText: '是的',
                cancelButtonText: '取消',
                type: 'warning',
            }
    )
    .then(() => {
        return del${BusinessName}(${pkColumn.javaField}s);
    })
    .then(() => {
        getList();
        ElMessage('删除成功')
    })
    .catch(() => {
        ElMessage.error('删除失败')
    })
}
function format(dateStr) {
    let date = new Date(dateStr)
    let year = date.getFullYear();
    let month = String(date.getMonth() + 1).padStart(2, '0');
    let day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}
</script>
<style>
    .dialog-footer {
        display: flex;
        justify-content: center;
        margin: 5% 0;
    }
    .el-dialog__body {
        padding: 5%;
    }
</style>